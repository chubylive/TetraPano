from math import pi
import math

octahedronVert = [[0, 90], [-90, 0], [0, 0], [90, 0], [180, 0], [0, -90]]
octahedronFaces = [[0, 2, 1], [0, 3, 2], [5, 1, 2], [5, 2, 3], [0, 1, 4], [0, 4, 3], [5, 4, 1], [5, 3, 4]]
octahedronParent = [-1, 0, 0, 1, 0, 1, 4, 5]


degrees = 180 / pi
A0 = math.asin(1/math.sqrt(3)) * degrees,
A1 = math.acos((math.sqrt(5) - 1) / math.sqrt(3) / 2) * degrees,
A2 = 90 - A1,
A3 = math.acos(-(1 + math.sqrt(5)) / math.sqrt(3) / 2) * degrees;
dodecahedronVert = [[[45,A0],[0,A1],[180,A1],[135,A0],[90,A2]],[[45,A0],[A2,0],[-A2,0],[-45,A0],[0,A1]],[[45,A0],[90,A2],[90,-A2],[45,-A0],[A2,0]],[[0,A1],[ -45,A0],[-90,A2],[-135,A0],[180,A1]],[[A2,0],[45,-A0],[0,-A1],[-45,-A0],[-A2,0]],[[90,A2],[135,A0],[A3,0],[135,-A0],[90,-A2]],[[45,-A0],[90,-A2],[135,-A0],[180,-A1],[0,-A1]],[[135,A0],[180,A1],[-135,A0],[-A3,0],[A3,0]],[[-45,A0],[-A2,0],[-45,-A0],[-90,-A2],[-90,A2]],[[-45,-A0],[0,-A1],[180,-A1],[-135,-A0],[-90,-A2]],[[135,-A0],[A3,0],[-A3,0],[-135,-A0],[180,-A1]],[[-135,A0],[-90,A2],[-90,-A2],[-135,-A0],[-A3,0]]]
dodecahedronParent = [-1,0,4,8,1,2,2,3,1,8,6,3]


icosahedronVert = [[0, 90], [0, -90]].concat(
[0,1,2,3,4,5,6,7,8,9].map(function(i) {
  var phi = (i * 36 + 180) % 360 - 180;
  return [phi, i & 1 ? theta : -theta];
})
);

icosahedronFaces = [ [0, 3, 11], [0, 5, 3], [0, 7, 5], [0, 9, 7], [0, 11, 9], // North
[2, 11, 3], [3, 4, 2], [4, 3, 5], [5, 6, 4], [6, 5, 7], [7, 8, 6], [8, 7, 9], [9, 10, 8], [10, 9, 11], [11, 2, 10], // Equator 
[1, 2, 4], [1, 4, 6], [1, 6, 8], [1, 8, 10], [1, 10, 2] // South 
]

icosahedronParents = [-1,0,1,11,3,0,7,1,7,8,9,10,11,12,13,6,8,10,19,15]
icosahedronParents = [
      // N
      -1, // 0
      7, // 1
      9, // 2
      11, // 3
      13, // 4

      // Eq
      0, // 5
      5, // 6
      6, // 7
      7, // 8
      8, // 9

      9, // 10
      10, // 11
      11, // 12
      12, // 13
      13, // 14

      // S
      6, // 15
      8, // 16
      10, // 17
      12, // 18
      14, // 19
    ]